/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.mudkipavenger.moodle_equation_creator.display;

import com.github.mudkipavenger.moodle_equation_creator.Tree.NodeTreebuilder;
import com.github.mudkipavenger.moodle_equation_creator.wildcard.WildCard;
import com.github.mudkipavenger.moodle_equation_creator.wildcard.WildCardManager;
import java.awt.Component;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.util.Objects;

/**
 *
 * @author levi
 */
public class MEC_GUI extends javax.swing.JFrame {

    /**
     * Creates new form TestGui
     */
    public MEC_GUI() {
        initComponents();
        addRightClickMenuMouseListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newWildCardDialog = new javax.swing.JDialog();
        newWildCardDialog_nameLabel = new java.awt.Label();
        newWildCardDialog_okButton = new javax.swing.JButton();
        newWildCardDialog_rangeLabel = new javax.swing.JLabel();
        newWildCardDialog_enterNameLabel = new javax.swing.JLabel();
        newWildCardDialog_nameTextField = new javax.swing.JTextField();
        newWildCardDialog_minTextField = new javax.swing.JTextField();
        newWildCardDialog_toLabel = new javax.swing.JLabel();
        newWildCardDialog_maxTextField = new javax.swing.JTextField();
        newWildCardDialog_intervalLabel = new javax.swing.JLabel();
        newWildCardDialog_intervalTextField = new javax.swing.JTextField();
        NewWildCardFromExpressionDialog = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        NewWildCardFromExpressionDialog_inputValueTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        NewWildCardFromExpressionDialog_inputNameTextField = new javax.swing.JTextField();
        NewWildCardFromExpressionDialog_enterNameLabel = new javax.swing.JLabel();
        NewWildCardFromExpressionDialog_wildcardValueLabel = new javax.swing.JLabel();
        NewWildCardFromExpressionDialog_convertButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        NewWildCardFromExpressionDialog_outputNameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        NewWildCardFromExpressionDialog_outputValueTextArea = new javax.swing.JTextArea();
        NewWildCardFromExpressionDialog_okButton = new javax.swing.JButton();
        NewWildCardFromExpressionDialog_infoCorrectLabel = new javax.swing.JLabel();
        ErrorDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        ErrorDialog_okButton = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        ErrorDialog_errorMessageLabel = new javax.swing.JLabel();
        MainTabPane = new javax.swing.JTabbedPane();
        ExpressionsPanel = new javax.swing.JPanel();
        ExpressionsPanel_outputTextAreaScollPane = new javax.swing.JScrollPane();
        ExpressionsPanel_outputTextArea = new javax.swing.JTextArea();
        ExpressionsPanel_directionsLabel1 = new javax.swing.JLabel();
        ExpressionsPanel_inputLabel = new javax.swing.JLabel();
        ExpressionsPanel_copyButton = new javax.swing.JButton();
        ExpressionsPanel_inputTextAreaScollPane = new javax.swing.JScrollPane();
        ExpressionsPanel_inputTextArea = new javax.swing.JTextArea();
        ExpressionsPanel_convertButton = new javax.swing.JButton();
        ExpressionsPanel_directionsLabel2 = new javax.swing.JLabel();
        ExpressionsPanel_outputLabel = new javax.swing.JLabel();
        ExpressionsPanel_insertWildcardsButton = new javax.swing.JButton();
        WildcardPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        WildcardPanel_wildcardTable = new javax.swing.JTable();
        WildcardPanel_addNewWildcardButton = new javax.swing.JButton();
        WildcardPanel_addNewWildcardExpressionButton = new javax.swing.JButton();
        WildcardPanel_editWildcardButton = new javax.swing.JButton();
        WildcardPanel_removeWildcardButton = new javax.swing.JButton();
        QuestionPanel = new javax.swing.JPanel();
        QuestionPanel_insertWildcardButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        QuestionPanel_questionTextArea = new javax.swing.JTextArea();

        newWildCardDialog.setTitle("Add New WildCard");
        newWildCardDialog.setName(""); // NOI18N
        newWildCardDialog.setSize(new java.awt.Dimension(400, 300));
        newWildCardDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                newWildCardDialogComponentShown(evt);
            }
        });

        newWildCardDialog_nameLabel.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        newWildCardDialog_nameLabel.setForeground(new java.awt.Color(76, 76, 76));
        newWildCardDialog_nameLabel.setText("Name");

        newWildCardDialog_okButton.setText("OK");
        newWildCardDialog_okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newWildCardDialog_okButtonActionPerformed(evt);
            }
        });

        newWildCardDialog_rangeLabel.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        newWildCardDialog_rangeLabel.setText("Range");

        newWildCardDialog_enterNameLabel.setText("Enter Wildcard Name:");

        newWildCardDialog_minTextField.setText("1");

        newWildCardDialog_toLabel.setText("To");

        newWildCardDialog_maxTextField.setText("10");

        newWildCardDialog_intervalLabel.setText("By Intervals of:");

        newWildCardDialog_intervalTextField.setText("1");

        javax.swing.GroupLayout newWildCardDialogLayout = new javax.swing.GroupLayout(newWildCardDialog.getContentPane());
        newWildCardDialog.getContentPane().setLayout(newWildCardDialogLayout);
        newWildCardDialogLayout.setHorizontalGroup(
            newWildCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newWildCardDialogLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(newWildCardDialog_enterNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newWildCardDialog_nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(newWildCardDialogLayout.createSequentialGroup()
                .addGroup(newWildCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newWildCardDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(newWildCardDialog_rangeLabel))
                    .addGroup(newWildCardDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(newWildCardDialog_nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newWildCardDialogLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(newWildCardDialog_okButton))
                    .addGroup(newWildCardDialogLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(newWildCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newWildCardDialogLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(newWildCardDialog_intervalLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newWildCardDialog_intervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newWildCardDialogLayout.createSequentialGroup()
                                .addComponent(newWildCardDialog_minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newWildCardDialog_toLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newWildCardDialog_maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        newWildCardDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {newWildCardDialog_maxTextField, newWildCardDialog_minTextField});

        newWildCardDialogLayout.setVerticalGroup(
            newWildCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newWildCardDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newWildCardDialog_nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(newWildCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newWildCardDialog_enterNameLabel)
                    .addComponent(newWildCardDialog_nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newWildCardDialog_rangeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newWildCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newWildCardDialog_minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newWildCardDialog_toLabel)
                    .addComponent(newWildCardDialog_maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newWildCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newWildCardDialog_intervalLabel)
                    .addComponent(newWildCardDialog_intervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(newWildCardDialog_okButton)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        NewWildCardFromExpressionDialog.setModal(true);
        NewWildCardFromExpressionDialog.setSize(new java.awt.Dimension(500, 415));
        NewWildCardFromExpressionDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                NewWildCardFromExpressionDialogWindowActivated(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        NewWildCardFromExpressionDialog_inputValueTextArea.setColumns(20);
        NewWildCardFromExpressionDialog_inputValueTextArea.setLineWrap(true);
        NewWildCardFromExpressionDialog_inputValueTextArea.setRows(5);
        jScrollPane1.setViewportView(NewWildCardFromExpressionDialog_inputValueTextArea);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel1.setText("=");

        NewWildCardFromExpressionDialog_enterNameLabel.setText("Enter Wildcard Name");

        NewWildCardFromExpressionDialog_wildcardValueLabel.setText("Enter Wildcard value as LaTex expression");

        NewWildCardFromExpressionDialog_convertButton.setText("Convert");
        NewWildCardFromExpressionDialog_convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewWildCardFromExpressionDialog_convertButtonActionPerformed(evt);
            }
        });

        NewWildCardFromExpressionDialog_outputNameTextField.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("=");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        NewWildCardFromExpressionDialog_outputValueTextArea.setEditable(false);
        NewWildCardFromExpressionDialog_outputValueTextArea.setColumns(20);
        NewWildCardFromExpressionDialog_outputValueTextArea.setRows(5);
        jScrollPane2.setViewportView(NewWildCardFromExpressionDialog_outputValueTextArea);

        NewWildCardFromExpressionDialog_okButton.setText("OK");
        NewWildCardFromExpressionDialog_okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewWildCardFromExpressionDialog_okButtonActionPerformed(evt);
            }
        });

        NewWildCardFromExpressionDialog_infoCorrectLabel.setText("If the information above is correct click OK");

        javax.swing.GroupLayout NewWildCardFromExpressionDialogLayout = new javax.swing.GroupLayout(NewWildCardFromExpressionDialog.getContentPane());
        NewWildCardFromExpressionDialog.getContentPane().setLayout(NewWildCardFromExpressionDialogLayout);
        NewWildCardFromExpressionDialogLayout.setHorizontalGroup(
            NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                        .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                                .addComponent(NewWildCardFromExpressionDialog_outputNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                                .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(NewWildCardFromExpressionDialog_enterNameLabel)
                                    .addComponent(NewWildCardFromExpressionDialog_inputNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(12, 12, 12)))
                        .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                        .addComponent(NewWildCardFromExpressionDialog_convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111))))
            .addGroup(NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jSeparator1))
                    .addGroup(NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                        .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(NewWildCardFromExpressionDialog_okButton))
                            .addGroup(NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                                .addGap(186, 186, 186)
                                .addComponent(NewWildCardFromExpressionDialog_wildcardValueLabel))
                            .addGroup(NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(NewWildCardFromExpressionDialog_infoCorrectLabel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        NewWildCardFromExpressionDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {NewWildCardFromExpressionDialog_inputNameTextField, NewWildCardFromExpressionDialog_outputNameTextField});

        NewWildCardFromExpressionDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel4});

        NewWildCardFromExpressionDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        NewWildCardFromExpressionDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {NewWildCardFromExpressionDialog_convertButton, NewWildCardFromExpressionDialog_okButton});

        NewWildCardFromExpressionDialogLayout.setVerticalGroup(
            NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                        .addComponent(NewWildCardFromExpressionDialog_wildcardValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(NewWildCardFromExpressionDialogLayout.createSequentialGroup()
                        .addComponent(NewWildCardFromExpressionDialog_enterNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NewWildCardFromExpressionDialog_inputNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NewWildCardFromExpressionDialog_convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(NewWildCardFromExpressionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(NewWildCardFromExpressionDialog_outputNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NewWildCardFromExpressionDialog_infoCorrectLabel)
                .addGap(27, 27, 27)
                .addComponent(NewWildCardFromExpressionDialog_okButton)
                .addContainerGap())
        );

        NewWildCardFromExpressionDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {NewWildCardFromExpressionDialog_inputNameTextField, NewWildCardFromExpressionDialog_outputNameTextField});

        NewWildCardFromExpressionDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel4});

        NewWildCardFromExpressionDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        NewWildCardFromExpressionDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {NewWildCardFromExpressionDialog_convertButton, NewWildCardFromExpressionDialog_okButton});

        ErrorDialog.setModal(true);
        ErrorDialog.setResizable(false);
        ErrorDialog.setSize(new java.awt.Dimension(300, 200));

        jPanel1.setLayout(new java.awt.GridLayout(2, 3));
        jPanel1.add(filler5);

        ErrorDialog_okButton.setText("OK");
        ErrorDialog_okButton.setPreferredSize(new java.awt.Dimension(70, 40));
        ErrorDialog_okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ErrorDialog_okButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ErrorDialog_okButton);
        jPanel1.add(filler3);
        jPanel1.add(filler4);
        jPanel1.add(filler6);

        ErrorDialog.getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        ErrorDialog_errorMessageLabel.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        ErrorDialog_errorMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ErrorDialog_errorMessageLabel.setText("ERROR");
        ErrorDialog.getContentPane().add(ErrorDialog_errorMessageLabel, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Moodle Equation Creator");
        setSize(new java.awt.Dimension(550, 480));

        ExpressionsPanel_outputTextAreaScollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        ExpressionsPanel_outputTextArea.setEditable(false);
        ExpressionsPanel_outputTextArea.setColumns(20);
        ExpressionsPanel_outputTextArea.setLineWrap(true);
        ExpressionsPanel_outputTextArea.setRows(5);
        ExpressionsPanel_outputTextAreaScollPane.setViewportView(ExpressionsPanel_outputTextArea);

        ExpressionsPanel_directionsLabel1.setText("Enter LaTex code in the box below ");

        ExpressionsPanel_inputLabel.setFont(new java.awt.Font("Ubuntu", 0, 30)); // NOI18N
        ExpressionsPanel_inputLabel.setText("Input:");

        ExpressionsPanel_copyButton.setText("COPY");
        ExpressionsPanel_copyButton.setPreferredSize(new java.awt.Dimension(85, 70));
        ExpressionsPanel_copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpressionsPanel_copyButtonActionPerformed(evt);
            }
        });

        ExpressionsPanel_inputTextArea.setColumns(20);
        ExpressionsPanel_inputTextArea.setLineWrap(true);
        ExpressionsPanel_inputTextArea.setRows(5);
        ExpressionsPanel_inputTextAreaScollPane.setViewportView(ExpressionsPanel_inputTextArea);

        ExpressionsPanel_convertButton.setText("Convert");
        ExpressionsPanel_convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpressionsPanel_convertButtonActionPerformed(evt);
            }
        });

        ExpressionsPanel_directionsLabel2.setText("Click Convert when done");

        ExpressionsPanel_outputLabel.setFont(new java.awt.Font("Ubuntu", 0, 30)); // NOI18N
        ExpressionsPanel_outputLabel.setText("Output:");

        ExpressionsPanel_insertWildcardsButton.setText("<html><p style=\"text-align: center\">Insert<br />Wildcards</p></html>");
        ExpressionsPanel_insertWildcardsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ExpressionsPanel_insertWildcardsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpressionsPanel_insertWildcardsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ExpressionsPanelLayout = new javax.swing.GroupLayout(ExpressionsPanel);
        ExpressionsPanel.setLayout(ExpressionsPanelLayout);
        ExpressionsPanelLayout.setHorizontalGroup(
            ExpressionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpressionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ExpressionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ExpressionsPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(ExpressionsPanel_inputTextAreaScollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ExpressionsPanel_convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ExpressionsPanel_inputLabel)
                    .addGroup(ExpressionsPanelLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(ExpressionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ExpressionsPanel_directionsLabel2)
                            .addComponent(ExpressionsPanel_directionsLabel1)))
                    .addComponent(ExpressionsPanel_outputLabel)
                    .addGroup(ExpressionsPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(ExpressionsPanel_outputTextAreaScollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ExpressionsPanel_insertWildcardsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(ExpressionsPanel_copyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        ExpressionsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ExpressionsPanel_convertButton, ExpressionsPanel_copyButton, ExpressionsPanel_insertWildcardsButton});

        ExpressionsPanelLayout.setVerticalGroup(
            ExpressionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpressionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ExpressionsPanel_inputLabel)
                .addGap(13, 13, 13)
                .addComponent(ExpressionsPanel_directionsLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExpressionsPanel_directionsLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ExpressionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ExpressionsPanel_inputTextAreaScollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(ExpressionsPanel_convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(ExpressionsPanel_outputLabel)
                .addGap(18, 18, 18)
                .addGroup(ExpressionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ExpressionsPanel_copyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExpressionsPanel_outputTextAreaScollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExpressionsPanel_insertWildcardsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        ExpressionsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ExpressionsPanel_convertButton, ExpressionsPanel_copyButton, ExpressionsPanel_insertWildcardsButton});

        MainTabPane.addTab("Expression", ExpressionsPanel);

        WildcardPanel_wildcardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Value", "Min", "Max"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        WildcardPanel_wildcardTable.setFocusable(false);
        WildcardPanel_wildcardTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(WildcardPanel_wildcardTable);

        WildcardPanel_addNewWildcardButton.setText("<html>Add New <br /> Wildcard</html>");
        WildcardPanel_addNewWildcardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WildcardPanel_addNewWildcardButtonActionPerformed(evt);
            }
        });

        WildcardPanel_addNewWildcardExpressionButton.setText("<html><p style=\"text-align: center\">Add New<br />Wildcard<br /> From Expression</p></html>");
        WildcardPanel_addNewWildcardExpressionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        WildcardPanel_addNewWildcardExpressionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WildcardPanel_addNewWildcardExpressionButtonActionPerformed(evt);
            }
        });

        WildcardPanel_editWildcardButton.setText("<html><p style=\"text-align: center\">Edit<br/> Wildcard</p></html>");
        WildcardPanel_editWildcardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WildcardPanel_editWildcardButtonActionPerformed(evt);
            }
        });

        WildcardPanel_removeWildcardButton.setText("<html><p style=\"text-align: center\">Remove<br/>Wildcard</p></html>");

        javax.swing.GroupLayout WildcardPanelLayout = new javax.swing.GroupLayout(WildcardPanel);
        WildcardPanel.setLayout(WildcardPanelLayout);
        WildcardPanelLayout.setHorizontalGroup(
            WildcardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
            .addGroup(WildcardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WildcardPanel_addNewWildcardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(WildcardPanel_addNewWildcardExpressionButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(WildcardPanel_editWildcardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(WildcardPanel_removeWildcardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        WildcardPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {WildcardPanel_addNewWildcardButton, WildcardPanel_addNewWildcardExpressionButton, WildcardPanel_editWildcardButton, WildcardPanel_removeWildcardButton});

        WildcardPanelLayout.setVerticalGroup(
            WildcardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WildcardPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(WildcardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(WildcardPanel_removeWildcardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WildcardPanel_editWildcardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WildcardPanel_addNewWildcardExpressionButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WildcardPanel_addNewWildcardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        WildcardPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {WildcardPanel_addNewWildcardButton, WildcardPanel_addNewWildcardExpressionButton, WildcardPanel_editWildcardButton, WildcardPanel_removeWildcardButton});

        MainTabPane.addTab("Wildcards", WildcardPanel);

        QuestionPanel_insertWildcardButton.setText("<html><p style=\"text-align: center\">Insert<br/>Wildcards</p></html>");
        QuestionPanel_insertWildcardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuestionPanel_insertWildcardButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel2.setText("Enter Question Text Below:");

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        QuestionPanel_questionTextArea.setColumns(20);
        QuestionPanel_questionTextArea.setLineWrap(true);
        QuestionPanel_questionTextArea.setRows(5);
        jScrollPane5.setViewportView(QuestionPanel_questionTextArea);

        javax.swing.GroupLayout QuestionPanelLayout = new javax.swing.GroupLayout(QuestionPanel);
        QuestionPanel.setLayout(QuestionPanelLayout);
        QuestionPanelLayout.setHorizontalGroup(
            QuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(QuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                    .addGroup(QuestionPanelLayout.createSequentialGroup()
                        .addGroup(QuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QuestionPanel_insertWildcardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        QuestionPanelLayout.setVerticalGroup(
            QuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(QuestionPanel_insertWildcardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainTabPane.addTab("Question", QuestionPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTabPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTabPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExpressionsPanel_convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpressionsPanel_convertButtonActionPerformed
        // TODO add your handling code here:
        ExpressionsPanel_outputTextArea.setText(NodeTreebuilder.buildTreeFromLaTex(ExpressionsPanel_inputTextArea.getText()).printExpression());
    }//GEN-LAST:event_ExpressionsPanel_convertButtonActionPerformed

    private void ExpressionsPanel_copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpressionsPanel_copyButtonActionPerformed
        // TODO add your handling code here:
        StringSelection selection = new StringSelection(ExpressionsPanel_outputTextArea.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(selection, selection);
    }//GEN-LAST:event_ExpressionsPanel_copyButtonActionPerformed

    private void WildcardPanel_addNewWildcardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WildcardPanel_addNewWildcardButtonActionPerformed
        // TODO add your handling code here:
        newWildCardDialog.setVisible(true);
    }//GEN-LAST:event_WildcardPanel_addNewWildcardButtonActionPerformed

    public static boolean isNumeric(String str)
    {
        return str.matches("-?\\d+(\\.\\d+)?");  //match a number with optional '-' and decimal.
    }
    
    
    
    private void newWildCardDialog_okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newWildCardDialog_okButtonActionPerformed
        // TODO add your handling code here:
        String name = newWildCardDialog_nameTextField.getText().trim();
        String min = newWildCardDialog_minTextField.getText().trim();
        String max = newWildCardDialog_maxTextField.getText().trim();
        String interval = newWildCardDialog_intervalTextField.getText().trim();
        
        Component source = (Component)evt.getSource();
        Component parent = source.getParent();

        
        if(Objects.equals(name, ""))
        {
            displayErrorMessage("Name is required", parent);
            return;
        }
        else
        {
            if(WildCardManager.wildCardExists(name))
            {
                displayErrorMessage("Name " + name + " is already taken", parent);
                return;
            }
        }
        if(Objects.equals(min, ""))
        {
            displayErrorMessage("Min Range is required", parent);
            return;
        }
        if(Objects.equals(max, ""))
        {
            displayErrorMessage("Max Range is required", parent);
            return;
        }
        if(Objects.equals(interval, ""))
        {
            displayErrorMessage("Interval is required", parent);
            return;
        }
        
        if(!isNumeric(min))
        {
            displayErrorMessage("Min Range must be a number", parent);
            return;
        }
        if(!isNumeric(max))
        {
            displayErrorMessage("Max Range must be a number", parent);
            return;
        }
        if(!isNumeric(interval))
        {
            displayErrorMessage("Interval must be a number", parent);
            return;
        }
        else
        {
            float interval_ = (Float.valueOf(interval));
            if(interval_ == 0)
            {
                displayErrorMessage("Interval cannot be 0", parent);
                return;
            }
            if(interval_ < 0)
            {
                displayErrorMessage("Interval must be positive", parent);
                return;
            }
            
            float min_ = Float.valueOf(min);
            float max_ = Float.valueOf(max);
            
            if(min_ > max_)
            {
                displayErrorMessage("Min Range must be less than Max Range", parent);
                return;
            }
            if(min_ == max_)
            {
                displayErrorMessage("Min Range and Max Range should not be equal. If you want a wildcard to be a constant then you should use the Add Wildcard from Expression Button on the Wildcards page", parent);
                return;
            }
            if((max_ - min_) % interval_ != 0)
            {
                displayErrorMessage("Min Range cannot reach Max Range by the interval provided", parent);
                return;
            }
            
        }

        WildCard wildcard = new WildCard();
        wildcard.setName(name);
        wildcard.setValue("{" + name + "}");
        wildcard.setMin(min);
        wildcard.setMax(max);
        wildcard.setInterval(interval);
        WildCardManager.addWildCard(wildcard, WildcardPanel_wildcardTable);
        newWildCardDialog.setVisible(false);    
    }//GEN-LAST:event_newWildCardDialog_okButtonActionPerformed

    private void ExpressionsPanel_insertWildcardsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpressionsPanel_insertWildcardsButtonActionPerformed
        // TODO add your handling code here:
        
        String output = WildCardManager.insertWildCardsIntoExpression(ExpressionsPanel_outputTextArea.getText());
        ExpressionsPanel_outputTextArea.setText(output);
        
    }//GEN-LAST:event_ExpressionsPanel_insertWildcardsButtonActionPerformed

    private void WildcardPanel_addNewWildcardExpressionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WildcardPanel_addNewWildcardExpressionButtonActionPerformed
        // TODO add your handling code here:
        NewWildCardFromExpressionDialog.setVisible(true);
    }//GEN-LAST:event_WildcardPanel_addNewWildcardExpressionButtonActionPerformed

    private void NewWildCardFromExpressionDialog_okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewWildCardFromExpressionDialog_okButtonActionPerformed
        // TODO add your handling code here:
        String nameOut = NewWildCardFromExpressionDialog_outputNameTextField.getText().trim();
        String valueOut = NewWildCardFromExpressionDialog_outputValueTextArea.getText().trim();
        //String nameIn = NewWildCardFromExpressionDialog_inputNameTextField.getText().trim();
        //String valueIn = NewWildCardFromExpressionDialog_inputValueTextArea.getText().trim();
        
        Component source = (Component)evt.getSource();
        Component parent = source.getParent();
        
        if(Objects.equals(nameOut, ""))
        {
            displayErrorMessage("Name output field is empty, did you forget to press the Convert button?", parent);
            return;
        }
        if(Objects.equals(valueOut, ""))
        {
            displayErrorMessage("Output expression field is empty, did you forget to press the Convert button?", parent);
        }
        WildCard wildcard = new WildCard();
        wildcard.setName(nameOut);
        wildcard.setValue(valueOut);
        WildCardManager.addWildCard(wildcard, WildcardPanel_wildcardTable);

        
        
        NewWildCardFromExpressionDialog.setVisible(false);
    }//GEN-LAST:event_NewWildCardFromExpressionDialog_okButtonActionPerformed

    private void NewWildCardFromExpressionDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_NewWildCardFromExpressionDialogWindowActivated
        // TODO add your handling code here:
        NewWildCardFromExpressionDialog_inputNameTextField.setText("");
        NewWildCardFromExpressionDialog_inputValueTextArea.setText("");
        NewWildCardFromExpressionDialog_outputValueTextArea.setText("");
        NewWildCardFromExpressionDialog_outputNameTextField.setText("");
    }//GEN-LAST:event_NewWildCardFromExpressionDialogWindowActivated

    private void NewWildCardFromExpressionDialog_convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewWildCardFromExpressionDialog_convertButtonActionPerformed
        // TODO add your handling code here:
        String nameIn = NewWildCardFromExpressionDialog_inputNameTextField.getText().trim();
        String valueIn = NewWildCardFromExpressionDialog_inputValueTextArea.getText().trim();
        
        Component source = (Component) evt.getSource();
        Component parent = source.getParent();
        
        if(Objects.equals(nameIn, ""))
        {
            displayErrorMessage("Name is required", parent);
            return;
        }
        else
        {
            if(WildCardManager.wildCardExists(nameIn))
            {
                displayErrorMessage("Name " + nameIn + " is already defined", parent);
                return;
            }
        }
        
        if(Objects.equals(valueIn, ""))
        {
            displayErrorMessage("Expression is required", parent);
            return;
        }
        
        NewWildCardFromExpressionDialog_outputValueTextArea.setText(NodeTreebuilder.buildTreeFromLaTex(valueIn).printExpression());
        NewWildCardFromExpressionDialog_outputNameTextField.setText(nameIn);
    }//GEN-LAST:event_NewWildCardFromExpressionDialog_convertButtonActionPerformed

    private void QuestionPanel_insertWildcardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuestionPanel_insertWildcardButtonActionPerformed
        // TODO add your handling code here:
        QuestionPanel_questionTextArea.setText(WildCardManager.insertWildCardsIntoQuestion(QuestionPanel_questionTextArea.getText()));
        
    }//GEN-LAST:event_QuestionPanel_insertWildcardButtonActionPerformed

    private void WildcardPanel_editWildcardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WildcardPanel_editWildcardButtonActionPerformed
        // TODO add your handling code here:
        Component source=(Component)evt.getSource();
        displayErrorMessage("Hello world my name is error and I love pie apple pir dkhfsdjkfhsjkf asdkjfhs sdkjfhskf ddbd ddgad dadgadjsgfjasf", source.getParent());
        //ErrorDialog.setVisible(true);
    }//GEN-LAST:event_WildcardPanel_editWildcardButtonActionPerformed

    private void ErrorDialog_okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ErrorDialog_okButtonActionPerformed
        // TODO add your handling code here:
        ErrorDialog.setVisible(false);
    }//GEN-LAST:event_ErrorDialog_okButtonActionPerformed

    private void newWildCardDialogComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_newWildCardDialogComponentShown
        // TODO add your handling code here:
        newWildCardDialog_nameTextField.setText("");
        newWildCardDialog_minTextField.setText("1");
        newWildCardDialog_maxTextField.setText("10");
        newWildCardDialog_intervalTextField.setText("1");
    }//GEN-LAST:event_newWildCardDialogComponentShown

    public void displayErrorMessage(String message, Component parent)
    {
        ErrorDialog_errorMessageLabel.setText("<html><p style= \"text-align: center; width: 90%\">" + message + "</p></html>");
        ErrorDialog.setLocationRelativeTo(parent);
        ErrorDialog.setVisible(true);
    }
    
    public void addRightClickMenuMouseListeners()
    {
        ExpressionsPanel_inputTextArea.addMouseListener(new ContextMenuMouseListener());
        ExpressionsPanel_outputTextArea.addMouseListener(new ContextMenuMouseListener());
        QuestionPanel_questionTextArea.addMouseListener(new ContextMenuMouseListener());
        newWildCardDialog_nameTextField.addMouseListener(new ContextMenuMouseListener());
        newWildCardDialog_minTextField.addMouseListener(new ContextMenuMouseListener());
        newWildCardDialog_maxTextField.addMouseListener(new ContextMenuMouseListener());
        newWildCardDialog_intervalTextField.addMouseListener(new ContextMenuMouseListener());
        NewWildCardFromExpressionDialog_inputNameTextField.addMouseListener(new ContextMenuMouseListener());
        NewWildCardFromExpressionDialog_inputValueTextArea.addMouseListener(new ContextMenuMouseListener());
        NewWildCardFromExpressionDialog_outputNameTextField.addMouseListener(new ContextMenuMouseListener());
        NewWildCardFromExpressionDialog_outputValueTextArea.addMouseListener(new ContextMenuMouseListener());
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }*/
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MEC_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MEC_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MEC_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MEC_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MEC_GUI().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ErrorDialog;
    private javax.swing.JLabel ErrorDialog_errorMessageLabel;
    private javax.swing.JButton ErrorDialog_okButton;
    private javax.swing.JPanel ExpressionsPanel;
    private javax.swing.JButton ExpressionsPanel_convertButton;
    private javax.swing.JButton ExpressionsPanel_copyButton;
    private javax.swing.JLabel ExpressionsPanel_directionsLabel1;
    private javax.swing.JLabel ExpressionsPanel_directionsLabel2;
    private javax.swing.JLabel ExpressionsPanel_inputLabel;
    private javax.swing.JTextArea ExpressionsPanel_inputTextArea;
    private javax.swing.JScrollPane ExpressionsPanel_inputTextAreaScollPane;
    private javax.swing.JButton ExpressionsPanel_insertWildcardsButton;
    private javax.swing.JLabel ExpressionsPanel_outputLabel;
    private javax.swing.JTextArea ExpressionsPanel_outputTextArea;
    private javax.swing.JScrollPane ExpressionsPanel_outputTextAreaScollPane;
    private javax.swing.JTabbedPane MainTabPane;
    private javax.swing.JDialog NewWildCardFromExpressionDialog;
    private javax.swing.JButton NewWildCardFromExpressionDialog_convertButton;
    private javax.swing.JLabel NewWildCardFromExpressionDialog_enterNameLabel;
    private javax.swing.JLabel NewWildCardFromExpressionDialog_infoCorrectLabel;
    private javax.swing.JTextField NewWildCardFromExpressionDialog_inputNameTextField;
    private javax.swing.JTextArea NewWildCardFromExpressionDialog_inputValueTextArea;
    private javax.swing.JButton NewWildCardFromExpressionDialog_okButton;
    private javax.swing.JTextField NewWildCardFromExpressionDialog_outputNameTextField;
    private javax.swing.JTextArea NewWildCardFromExpressionDialog_outputValueTextArea;
    private javax.swing.JLabel NewWildCardFromExpressionDialog_wildcardValueLabel;
    private javax.swing.JPanel QuestionPanel;
    private javax.swing.JButton QuestionPanel_insertWildcardButton;
    private javax.swing.JTextArea QuestionPanel_questionTextArea;
    private javax.swing.JPanel WildcardPanel;
    private javax.swing.JButton WildcardPanel_addNewWildcardButton;
    private javax.swing.JButton WildcardPanel_addNewWildcardExpressionButton;
    private javax.swing.JButton WildcardPanel_editWildcardButton;
    private javax.swing.JButton WildcardPanel_removeWildcardButton;
    private javax.swing.JTable WildcardPanel_wildcardTable;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JDialog newWildCardDialog;
    private javax.swing.JLabel newWildCardDialog_enterNameLabel;
    private javax.swing.JLabel newWildCardDialog_intervalLabel;
    private javax.swing.JTextField newWildCardDialog_intervalTextField;
    private javax.swing.JTextField newWildCardDialog_maxTextField;
    private javax.swing.JTextField newWildCardDialog_minTextField;
    private java.awt.Label newWildCardDialog_nameLabel;
    private javax.swing.JTextField newWildCardDialog_nameTextField;
    private javax.swing.JButton newWildCardDialog_okButton;
    private javax.swing.JLabel newWildCardDialog_rangeLabel;
    private javax.swing.JLabel newWildCardDialog_toLabel;
    // End of variables declaration//GEN-END:variables
}
